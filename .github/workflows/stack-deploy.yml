name: Docker Stack Deploy

on:
  workflow_call:
    inputs:
      api-service-version:
        required: false
        type: string
      proxy-service-version:
        required: false 
        type: string
      pgcr-crawler-service-version:
        required: false
        type: string
    secrets:
      DOCKER_USERNAME:
        required: true
      DOCKER_PASSWORD:
        required: true
      TOKEN:
        required: true 

jobs:
  deploy:
    runs-on: [self-hosted, Linux, X64]
    env:
      API_SERVICE_VERSION: ${{ inputs.api-service-version }}
      PROXY_SERVICE_VERSION: ${{ inputs.proxy-service-version }}
      PGCR_CRAWLER_SERVICE_VERSION: ${{ inputs.pgcr-crawler-service-version }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          repository: Riven-of-a-Thousand-Servers/rivenbot-deployments
          token: ${{ secrets.TOKEN }}
      - name: Docker Login
        run: |
          mkdir -p /tmp/docker-config
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker --config /tmp/docker-config login --username "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Docker Stack Deploy
        run: |
          docker --config /tmp/docker-config stack deploy --with-registry-auth --detach=true -qc docker-stack.yml rivenbot-stack

      - name: Check healthy services
        run: |
          set -e
          STACK=rivenbot-stack
          TIMEOUT=60
          END=$((SECONDS + TIMEOUT))

          while [ $SECONDS -lt $END ]; do
           NOT_READY=$(docker service ls --filter label=com.docker.stack.namesapce=$STACK --format '{{.Replicas}}' | grep -cE '0/[1-9]')
           if [ "$NOT_READY" -eq 0]; then
             echo "✅ All services are running."
             exit 0
           fi
             echo "Waiting for services to start..."
             sleep 3
          done

          echo "❌ Deployment failed: Some services did not start."
          for svc in $(docker service ls --filter label=com.docker.stack.namespace=$STACK --format '{{.Name}}'); do
            echo "=== $svc ==="
            docker service ps --no-trunc "$svc"
          done
